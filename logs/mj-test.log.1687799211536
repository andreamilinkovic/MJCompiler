INFO  19:05:04,321 - Compiling source file: E:\Andrea\Fakultet\Cetvrta godina\PP1\Projekat\Domaci\workspace\final\test\testB.mj
INFO  19:05:04,374 - #2 program
INFO  19:05:04,374 - #46 MJProgram
INFO  19:05:04,374 - #6 const
INFO  19:05:04,376 - #46 char
INFO  19:05:04,376 - #46 a
INFO  19:05:04,377 - #31 =
INFO  19:05:04,377 - #45 5
INFO  19:05:04,377 - #34 ;
INFO  19:05:04,378 - #46 type
INFO  19:05:04,378 - #46 b
INFO  19:05:04,378 - #34 ;
INFO  19:05:04,379 - #6 const
INFO  19:05:04,380 - #46 int
INFO  19:05:04,380 - #46 c
INFO  19:05:04,380 - #31 =
INFO  19:05:04,380 - #45 2
INFO  19:05:04,380 - #34 ;
INFO  19:05:04,380 - #46 char
INFO  19:05:04,380 - #46 d
INFO  19:05:04,380 - #34 ;
INFO  19:05:04,380 - #46 int
INFO  19:05:04,415 - #46 e
INFO  19:05:04,415 - #34 ;
INFO  19:05:04,415 - #46 int
INFO  19:05:04,416 - #46 arr1
INFO  19:05:04,416 - #40 [
INFO  19:05:04,416 - #41 ]
INFO  19:05:04,416 - #34 ;
INFO  19:05:04,417 - #46 int
INFO  19:05:04,417 - #46 arr2
INFO  19:05:04,417 - #40 [
INFO  19:05:04,417 - #41 ]
INFO  19:05:04,417 - #34 ;
INFO  19:05:04,418 - #46 char
INFO  19:05:04,418 - #46 e
INFO  19:05:04,418 - #34 ;
INFO  19:05:04,418 - #42 {
INFO  19:05:04,418 - #46 char
INFO  19:05:04,419 - #46 f
INFO  19:05:04,419 - #38 (
INFO  19:05:04,420 - #46 int
INFO  19:05:04,420 - #46 m
INFO  19:05:04,420 - #36 ,
INFO  19:05:04,422 - #46 int
INFO  19:05:04,422 - #46 n
INFO  19:05:04,422 - #36 ,
INFO  19:05:04,422 - #46 int
INFO  19:05:04,422 - #46 p
INFO  19:05:04,422 - #39 )
INFO  19:05:04,423 - #42 {
INFO  19:05:04,424 - #46 m
INFO  19:05:04,425 - #31 =
INFO  19:05:04,426 - #45 10
INFO  19:05:04,428 - #34 ;
INFO  19:05:04,432 - #12 return
INFO  19:05:04,432 - #46 m
INFO  19:05:04,432 - #34 ;
INFO  19:05:04,434 - #43 }
INFO  19:05:04,434 - #46 int
INFO  19:05:04,434 - #46 func
INFO  19:05:04,434 - #38 (
INFO  19:05:04,434 - #39 )
INFO  19:05:04,435 - #42 {
INFO  19:05:04,435 - #12 return
INFO  19:05:04,435 - #34 ;
INFO  19:05:04,436 - #43 }
INFO  19:05:04,436 - #13 void
INFO  19:05:04,436 - #46 main
INFO  19:05:04,437 - #38 (
INFO  19:05:04,437 - #39 )
INFO  19:05:04,437 - #42 {
INFO  19:05:04,437 - #46 k
INFO  19:05:04,438 - #31 =
INFO  19:05:04,438 - #45 4
INFO  19:05:04,438 - #34 ;
INFO  19:05:04,438 - #46 c
INFO  19:05:04,438 - #31 =
INFO  19:05:04,438 - #45 3
INFO  19:05:04,438 - #34 ;
INFO  19:05:04,439 - #46 d
INFO  19:05:04,439 - #31 =
INFO  19:05:04,439 - #45 5
INFO  19:05:04,439 - #34 ;
INFO  19:05:04,439 - #46 c
INFO  19:05:04,439 - #32 ++
INFO  19:05:04,439 - #34 ;
INFO  19:05:04,440 - #46 d
INFO  19:05:04,440 - #33 --
INFO  19:05:04,440 - #34 ;
INFO  19:05:04,440 - #46 d
INFO  19:05:04,440 - #38 (
INFO  19:05:04,440 - #39 )
INFO  19:05:04,441 - #34 ;
INFO  19:05:04,442 - #3 break
INFO  19:05:04,442 - #34 ;
INFO  19:05:04,442 - #15 continue
INFO  19:05:04,443 - #34 ;
INFO  19:05:04,443 - #11 read
INFO  19:05:04,444 - #38 (
INFO  19:05:04,444 - #46 c
INFO  19:05:04,445 - #39 )
INFO  19:05:04,445 - #34 ;
INFO  19:05:04,445 - #11 read
INFO  19:05:04,445 - #38 (
INFO  19:05:04,445 - #46 b
INFO  19:05:04,445 - #39 )
INFO  19:05:04,446 - #34 ;
INFO  19:05:04,446 - #10 print
INFO  19:05:04,446 - #38 (
INFO  19:05:04,446 - #46 b
INFO  19:05:04,446 - #39 )
INFO  19:05:04,447 - #34 ;
INFO  19:05:04,447 - #7 if
INFO  19:05:04,448 - #38 (
INFO  19:05:04,448 - #46 d
INFO  19:05:04,448 - #39 )
INFO  19:05:04,448 - #42 {
INFO  19:05:04,449 - #43 }
INFO  19:05:04,449 - #8 while
INFO  19:05:04,450 - #38 (
INFO  19:05:04,450 - #46 d
INFO  19:05:04,450 - #39 )
INFO  19:05:04,450 - #42 {
INFO  19:05:04,451 - #43 }
INFO  19:05:04,451 - #46 f
INFO  19:05:04,451 - #38 (
INFO  19:05:04,452 - #45 5
INFO  19:05:04,452 - #39 )
INFO  19:05:04,452 - #34 ;
INFO  19:05:04,452 - #46 f
INFO  19:05:04,452 - #38 (
INFO  19:05:04,452 - #45 5
INFO  19:05:04,452 - #36 ,
INFO  19:05:04,452 - #45 4
INFO  19:05:04,453 - #36 ,
INFO  19:05:04,453 - #48 c
INFO  19:05:04,453 - #39 )
INFO  19:05:04,453 - #34 ;
INFO  19:05:04,454 - #7 if
INFO  19:05:04,454 - #38 (
INFO  19:05:04,454 - #45 5
INFO  19:05:04,454 - #27 <
INFO  19:05:04,454 - #48 c
INFO  19:05:04,456 - #39 )
INFO  19:05:04,456 - #42 {
INFO  19:05:04,456 - #43 }
INFO  19:05:04,456 - #7 if
INFO  19:05:04,457 - #38 (
INFO  19:05:04,457 - #46 arr1
INFO  19:05:04,457 - #25 >
INFO  19:05:04,457 - #46 arr2
INFO  19:05:04,458 - #39 )
INFO  19:05:04,458 - #42 {
INFO  19:05:04,458 - #43 }
INFO  19:05:04,458 - #46 e
INFO  19:05:04,458 - #31 =
INFO  19:05:04,458 - #19 -
INFO  19:05:04,458 - #48 c
INFO  19:05:04,459 - #34 ;
INFO  19:05:04,460 - #46 e
INFO  19:05:04,460 - #31 =
INFO  19:05:04,460 - #45 5
INFO  19:05:04,460 - #34 ;
INFO  19:05:04,460 - #46 e
INFO  19:05:04,460 - #31 =
INFO  19:05:04,460 - #46 e
INFO  19:05:04,460 - #18 +
INFO  19:05:04,460 - #48 c
INFO  19:05:04,462 - #34 ;
INFO  19:05:04,462 - #46 e
INFO  19:05:04,462 - #31 =
INFO  19:05:04,462 - #45 5
INFO  19:05:04,462 - #34 ;
INFO  19:05:04,462 - #46 e
INFO  19:05:04,462 - #31 =
INFO  19:05:04,463 - #46 e
INFO  19:05:04,463 - #20 *
INFO  19:05:04,463 - #48 c
INFO  19:05:04,464 - #34 ;
INFO  19:05:04,465 - #46 e
INFO  19:05:04,465 - #38 (
INFO  19:05:04,465 - #39 )
INFO  19:05:04,465 - #34 ;
INFO  19:05:04,465 - #46 arr1
INFO  19:05:04,465 - #31 =
INFO  19:05:04,465 - #9 new
INFO  19:05:04,465 - #46 int
INFO  19:05:04,465 - #40 [
INFO  19:05:04,465 - #48 c
INFO  19:05:04,465 - #41 ]
INFO  19:05:04,465 - #34 ;
INFO  19:05:04,466 - #46 e
INFO  19:05:04,466 - #31 =
INFO  19:05:04,466 - #46 arr1
INFO  19:05:04,466 - #40 [
INFO  19:05:04,466 - #45 1
INFO  19:05:04,466 - #41 ]
INFO  19:05:04,466 - #34 ;
INFO  19:05:04,466 - #46 e
INFO  19:05:04,466 - #31 =
INFO  19:05:04,466 - #46 arr1
INFO  19:05:04,467 - #40 [
INFO  19:05:04,467 - #48 c
INFO  19:05:04,467 - #41 ]
INFO  19:05:04,467 - #34 ;
INFO  19:05:04,467 - #46 e
INFO  19:05:04,467 - #31 =
INFO  19:05:04,467 - #46 e
INFO  19:05:04,467 - #40 [
INFO  19:05:04,467 - #45 1
INFO  19:05:04,467 - #41 ]
INFO  19:05:04,467 - #34 ;
INFO  19:05:04,467 - #12 return
INFO  19:05:04,467 - #34 ;
INFO  19:05:04,468 - #43 }
INFO  19:05:04,468 - #43 }
INFO  19:05:04,481 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationList(
                  NoDeclarationList(
                  ) [NoDeclarationList]
                  ConstDeclarationItem(
                    ConstDeclaration(
                      Type(
                       char
                      ) [Type]
                      SingleConst(
                        ConstItem(
                         a
                          ConstNum(
                           5
                          ) [ConstNum]
                        ) [ConstItem]
                      ) [SingleConst]
                    ) [ConstDeclaration]
                  ) [ConstDeclarationItem]
                ) [DeclarationList]
                VarDeclarationItem(
                  VarDeclaration(
                    Type(
                     type
                    ) [Type]
                    SingleVar(
                      VariableItem(
                       b
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [VariableItem]
                    ) [SingleVar]
                  ) [VarDeclaration]
                ) [VarDeclarationItem]
              ) [DeclarationList]
              ConstDeclarationItem(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  SingleConst(
                    ConstItem(
                     c
                      ConstNum(
                       2
                      ) [ConstNum]
                    ) [ConstItem]
                  ) [SingleConst]
                ) [ConstDeclaration]
              ) [ConstDeclarationItem]
            ) [DeclarationList]
            VarDeclarationItem(
              VarDeclaration(
                Type(
                 char
                ) [Type]
                SingleVar(
                  VariableItem(
                   d
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [VariableItem]
                ) [SingleVar]
              ) [VarDeclaration]
            ) [VarDeclarationItem]
          ) [DeclarationList]
          VarDeclarationItem(
            VarDeclaration(
              Type(
               int
              ) [Type]
              SingleVar(
                VariableItem(
                 e
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [VariableItem]
              ) [SingleVar]
            ) [VarDeclaration]
          ) [VarDeclarationItem]
        ) [DeclarationList]
        VarDeclarationItem(
          VarDeclaration(
            Type(
             int
            ) [Type]
            SingleVar(
              VariableItem(
               arr1
                ArrayVar(
                ) [ArrayVar]
              ) [VariableItem]
            ) [SingleVar]
          ) [VarDeclaration]
        ) [VarDeclarationItem]
      ) [DeclarationList]
      VarDeclarationItem(
        VarDeclaration(
          Type(
           int
          ) [Type]
          SingleVar(
            VariableItem(
             arr2
              ArrayVar(
              ) [ArrayVar]
            ) [VariableItem]
          ) [SingleVar]
        ) [VarDeclaration]
      ) [VarDeclarationItem]
    ) [DeclarationList]
    VarDeclarationItem(
      VarDeclaration(
        Type(
         char
        ) [Type]
        SingleVar(
          VariableItem(
           e
            NoArrayVar(
            ) [NoArrayVar]
          ) [VariableItem]
        ) [SingleVar]
      ) [VarDeclaration]
    ) [VarDeclarationItem]
  ) [DeclarationList]
  MethDeclarationList(
    MethDeclarationList(
      MethDeclarationList(
        NoMethDeclarationList(
        ) [NoMethDeclarationList]
        MethodDeclaration(
          MethDeclTypeName(
            MethodReturnTypeAny(
              Type(
               char
              ) [Type]
            ) [MethodReturnTypeAny]
           f
          ) [MethDeclTypeName]
          OptionalFormPars(
            MultipleFormPars(
              MultipleFormPars(
                SingleFormPar(
                  FormParsItem(
                    Type(
                     int
                    ) [Type]
                   m
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [FormParsItem]
                ) [SingleFormPar]
                FormParsItem(
                  Type(
                   int
                  ) [Type]
                 n
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [FormParsItem]
              ) [MultipleFormPars]
              FormParsItem(
                Type(
                 int
                ) [Type]
               p
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParsItem]
            ) [MultipleFormPars]
          ) [OptionalFormPars]
          NoOptVarDeclaration(
          ) [NoOptVarDeclaration]
          OptStatementList(
            OptStatementList(
              NoOptStatementList(
              ) [NoOptStatementList]
              DesignatorStmt(
                AssignOper(
                  DesignAssignOp(
                    DesignVar(
                     m
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expr(
                      ExpressionTerm(
                        PositiveExpr(
                        ) [PositiveExpr]
                        Term(
                          FactorNum(
                           10
                          ) [FactorNum]
                          NoOptMulFacts(
                          ) [NoOptMulFacts]
                        ) [Term]
                      ) [ExpressionTerm]
                      NoOptAddTerms(
                      ) [NoOptAddTerms]
                    ) [Expr]
                  ) [DesignAssignOp]
                ) [AssignOper]
              ) [DesignatorStmt]
            ) [OptStatementList]
            ReturnStmt(
              RetExpr(
                Expr(
                  ExpressionTerm(
                    PositiveExpr(
                    ) [PositiveExpr]
                    Term(
                      DesignFactor(
                        DesignVar(
                         m
                        ) [DesignVar]
                        NoOptMethCall(
                        ) [NoOptMethCall]
                      ) [DesignFactor]
                      NoOptMulFacts(
                      ) [NoOptMulFacts]
                    ) [Term]
                  ) [ExpressionTerm]
                  NoOptAddTerms(
                  ) [NoOptAddTerms]
                ) [Expr]
              ) [RetExpr]
            ) [ReturnStmt]
          ) [OptStatementList]
        ) [MethodDeclaration]
      ) [MethDeclarationList]
      MethodDeclaration(
        MethDeclTypeName(
          MethodReturnTypeAny(
            Type(
             int
            ) [Type]
          ) [MethodReturnTypeAny]
         func
        ) [MethDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVarDeclaration(
        ) [NoOptVarDeclaration]
        OptStatementList(
          NoOptStatementList(
          ) [NoOptStatementList]
          ReturnStmt(
            NoRetExpr(
            ) [NoRetExpr]
          ) [ReturnStmt]
        ) [OptStatementList]
      ) [MethodDeclaration]
    ) [MethDeclarationList]
    MethodDeclaration(
      MethDeclTypeName(
        MethodReturnTypeVoid(
        ) [MethodReturnTypeVoid]
       main
      ) [MethDeclTypeName]
      NoOptionalFormPars(
      ) [NoOptionalFormPars]
      NoOptVarDeclaration(
      ) [NoOptVarDeclaration]
      OptStatementList(
        OptStatementList(
          OptStatementList(
            OptStatementList(
              OptStatementList(
                OptStatementList(
                  OptStatementList(
                    OptStatementList(
                      OptStatementList(
                        OptStatementList(
                          OptStatementList(
                            OptStatementList(
                              OptStatementList(
                                OptStatementList(
                                  OptStatementList(
                                    OptStatementList(
                                      OptStatementList(
                                        OptStatementList(
                                          OptStatementList(
                                            OptStatementList(
                                              OptStatementList(
                                                OptStatementList(
                                                  OptStatementList(
                                                    OptStatementList(
                                                      OptStatementList(
                                                        OptStatementList(
                                                          OptStatementList(
                                                            OptStatementList(
                                                              NoOptStatementList(
                                                              ) [NoOptStatementList]
                                                              DesignatorStmt(
                                                                AssignOper(
                                                                  DesignAssignOp(
                                                                    DesignVar(
                                                                     k
                                                                    ) [DesignVar]
                                                                    AssignOperation(
                                                                    ) [AssignOperation]
                                                                    Expr(
                                                                      ExpressionTerm(
                                                                        PositiveExpr(
                                                                        ) [PositiveExpr]
                                                                        Term(
                                                                          FactorNum(
                                                                           4
                                                                          ) [FactorNum]
                                                                          NoOptMulFacts(
                                                                          ) [NoOptMulFacts]
                                                                        ) [Term]
                                                                      ) [ExpressionTerm]
                                                                      NoOptAddTerms(
                                                                      ) [NoOptAddTerms]
                                                                    ) [Expr]
                                                                  ) [DesignAssignOp]
                                                                ) [AssignOper]
                                                              ) [DesignatorStmt]
                                                            ) [OptStatementList]
                                                            DesignatorStmt(
                                                              AssignOper(
                                                                DesignAssignOp(
                                                                  DesignVar(
                                                                   c
                                                                  ) [DesignVar]
                                                                  AssignOperation(
                                                                  ) [AssignOperation]
                                                                  Expr(
                                                                    ExpressionTerm(
                                                                      PositiveExpr(
                                                                      ) [PositiveExpr]
                                                                      Term(
                                                                        FactorNum(
                                                                         3
                                                                        ) [FactorNum]
                                                                        NoOptMulFacts(
                                                                        ) [NoOptMulFacts]
                                                                      ) [Term]
                                                                    ) [ExpressionTerm]
                                                                    NoOptAddTerms(
                                                                    ) [NoOptAddTerms]
                                                                  ) [Expr]
                                                                ) [DesignAssignOp]
                                                              ) [AssignOper]
                                                            ) [DesignatorStmt]
                                                          ) [OptStatementList]
                                                          DesignatorStmt(
                                                            AssignOper(
                                                              DesignAssignOp(
                                                                DesignVar(
                                                                 d
                                                                ) [DesignVar]
                                                                AssignOperation(
                                                                ) [AssignOperation]
                                                                Expr(
                                                                  ExpressionTerm(
                                                                    PositiveExpr(
                                                                    ) [PositiveExpr]
                                                                    Term(
                                                                      FactorNum(
                                                                       5
                                                                      ) [FactorNum]
                                                                      NoOptMulFacts(
                                                                      ) [NoOptMulFacts]
                                                                    ) [Term]
                                                                  ) [ExpressionTerm]
                                                                  NoOptAddTerms(
                                                                  ) [NoOptAddTerms]
                                                                ) [Expr]
                                                              ) [DesignAssignOp]
                                                            ) [AssignOper]
                                                          ) [DesignatorStmt]
                                                        ) [OptStatementList]
                                                        DesignatorStmt(
                                                          IncEff(
                                                            DesignVar(
                                                             c
                                                            ) [DesignVar]
                                                          ) [IncEff]
                                                        ) [DesignatorStmt]
                                                      ) [OptStatementList]
                                                      DesignatorStmt(
                                                        DecEff(
                                                          DesignVar(
                                                           d
                                                          ) [DesignVar]
                                                        ) [DecEff]
                                                      ) [DesignatorStmt]
                                                    ) [OptStatementList]
                                                    DesignatorStmt(
                                                      ProcCall(
                                                        DesignVar(
                                                         d
                                                        ) [DesignVar]
                                                        NoOptActPars(
                                                        ) [NoOptActPars]
                                                      ) [ProcCall]
                                                    ) [DesignatorStmt]
                                                  ) [OptStatementList]
                                                  BreakStmt(
                                                  ) [BreakStmt]
                                                ) [OptStatementList]
                                                ContinueStmt(
                                                ) [ContinueStmt]
                                              ) [OptStatementList]
                                              ReadStmt(
                                                DesignVar(
                                                 c
                                                ) [DesignVar]
                                              ) [ReadStmt]
                                            ) [OptStatementList]
                                            ReadStmt(
                                              DesignVar(
                                               b
                                              ) [DesignVar]
                                            ) [ReadStmt]
                                          ) [OptStatementList]
                                          PrintStmt(
                                            Expr(
                                              ExpressionTerm(
                                                PositiveExpr(
                                                ) [PositiveExpr]
                                                Term(
                                                  DesignFactor(
                                                    DesignVar(
                                                     b
                                                    ) [DesignVar]
                                                    NoOptMethCall(
                                                    ) [NoOptMethCall]
                                                  ) [DesignFactor]
                                                  NoOptMulFacts(
                                                  ) [NoOptMulFacts]
                                                ) [Term]
                                              ) [ExpressionTerm]
                                              NoOptAddTerms(
                                              ) [NoOptAddTerms]
                                            ) [Expr]
                                            NoOptPrint(
                                            ) [NoOptPrint]
                                          ) [PrintStmt]
                                        ) [OptStatementList]
                                        IfStmt(
                                          IfCond(
                                            SingleCondition(
                                              SingleCondTerm(
                                                SingleCondFact(
                                                  Expr(
                                                    ExpressionTerm(
                                                      PositiveExpr(
                                                      ) [PositiveExpr]
                                                      Term(
                                                        DesignFactor(
                                                          DesignVar(
                                                           d
                                                          ) [DesignVar]
                                                          NoOptMethCall(
                                                          ) [NoOptMethCall]
                                                        ) [DesignFactor]
                                                        NoOptMulFacts(
                                                        ) [NoOptMulFacts]
                                                      ) [Term]
                                                    ) [ExpressionTerm]
                                                    NoOptAddTerms(
                                                    ) [NoOptAddTerms]
                                                  ) [Expr]
                                                ) [SingleCondFact]
                                              ) [SingleCondTerm]
                                            ) [SingleCondition]
                                          ) [IfCond]
                                          BlockStmt(
                                            NoOptStatementList(
                                            ) [NoOptStatementList]
                                          ) [BlockStmt]
                                          NoElseStmt(
                                          ) [NoElseStmt]
                                        ) [IfStmt]
                                      ) [OptStatementList]
                                      WhileStmt(
                                        SingleCondition(
                                          SingleCondTerm(
                                            SingleCondFact(
                                              Expr(
                                                ExpressionTerm(
                                                  PositiveExpr(
                                                  ) [PositiveExpr]
                                                  Term(
                                                    DesignFactor(
                                                      DesignVar(
                                                       d
                                                      ) [DesignVar]
                                                      NoOptMethCall(
                                                      ) [NoOptMethCall]
                                                    ) [DesignFactor]
                                                    NoOptMulFacts(
                                                    ) [NoOptMulFacts]
                                                  ) [Term]
                                                ) [ExpressionTerm]
                                                NoOptAddTerms(
                                                ) [NoOptAddTerms]
                                              ) [Expr]
                                            ) [SingleCondFact]
                                          ) [SingleCondTerm]
                                        ) [SingleCondition]
                                        WhileStart(
                                        ) [WhileStart]
                                        BlockStmt(
                                          NoOptStatementList(
                                          ) [NoOptStatementList]
                                        ) [BlockStmt]
                                      ) [WhileStmt]
                                    ) [OptStatementList]
                                    DesignatorStmt(
                                      ProcCall(
                                        DesignVar(
                                         f
                                        ) [DesignVar]
                                        OptionalActPars(
                                          SingleActPars(
                                            Expr(
                                              ExpressionTerm(
                                                PositiveExpr(
                                                ) [PositiveExpr]
                                                Term(
                                                  FactorNum(
                                                   5
                                                  ) [FactorNum]
                                                  NoOptMulFacts(
                                                  ) [NoOptMulFacts]
                                                ) [Term]
                                              ) [ExpressionTerm]
                                              NoOptAddTerms(
                                              ) [NoOptAddTerms]
                                            ) [Expr]
                                          ) [SingleActPars]
                                        ) [OptionalActPars]
                                      ) [ProcCall]
                                    ) [DesignatorStmt]
                                  ) [OptStatementList]
                                  DesignatorStmt(
                                    ProcCall(
                                      DesignVar(
                                       f
                                      ) [DesignVar]
                                      OptionalActPars(
                                        MultipleActPars(
                                          MultipleActPars(
                                            SingleActPars(
                                              Expr(
                                                ExpressionTerm(
                                                  PositiveExpr(
                                                  ) [PositiveExpr]
                                                  Term(
                                                    FactorNum(
                                                     5
                                                    ) [FactorNum]
                                                    NoOptMulFacts(
                                                    ) [NoOptMulFacts]
                                                  ) [Term]
                                                ) [ExpressionTerm]
                                                NoOptAddTerms(
                                                ) [NoOptAddTerms]
                                              ) [Expr]
                                            ) [SingleActPars]
                                            Expr(
                                              ExpressionTerm(
                                                PositiveExpr(
                                                ) [PositiveExpr]
                                                Term(
                                                  FactorNum(
                                                   4
                                                  ) [FactorNum]
                                                  NoOptMulFacts(
                                                  ) [NoOptMulFacts]
                                                ) [Term]
                                              ) [ExpressionTerm]
                                              NoOptAddTerms(
                                              ) [NoOptAddTerms]
                                            ) [Expr]
                                          ) [MultipleActPars]
                                          Expr(
                                            ExpressionTerm(
                                              PositiveExpr(
                                              ) [PositiveExpr]
                                              Term(
                                                FactorChar(
                                                 c
                                                ) [FactorChar]
                                                NoOptMulFacts(
                                                ) [NoOptMulFacts]
                                              ) [Term]
                                            ) [ExpressionTerm]
                                            NoOptAddTerms(
                                            ) [NoOptAddTerms]
                                          ) [Expr]
                                        ) [MultipleActPars]
                                      ) [OptionalActPars]
                                    ) [ProcCall]
                                  ) [DesignatorStmt]
                                ) [OptStatementList]
                                IfStmt(
                                  IfCond(
                                    SingleCondition(
                                      SingleCondTerm(
                                        MultipleCondFact(
                                          Expr(
                                            ExpressionTerm(
                                              PositiveExpr(
                                              ) [PositiveExpr]
                                              Term(
                                                FactorNum(
                                                 5
                                                ) [FactorNum]
                                                NoOptMulFacts(
                                                ) [NoOptMulFacts]
                                              ) [Term]
                                            ) [ExpressionTerm]
                                            NoOptAddTerms(
                                            ) [NoOptAddTerms]
                                          ) [Expr]
                                          LessOperation(
                                          ) [LessOperation]
                                          Expr(
                                            ExpressionTerm(
                                              PositiveExpr(
                                              ) [PositiveExpr]
                                              Term(
                                                FactorChar(
                                                 c
                                                ) [FactorChar]
                                                NoOptMulFacts(
                                                ) [NoOptMulFacts]
                                              ) [Term]
                                            ) [ExpressionTerm]
                                            NoOptAddTerms(
                                            ) [NoOptAddTerms]
                                          ) [Expr]
                                        ) [MultipleCondFact]
                                      ) [SingleCondTerm]
                                    ) [SingleCondition]
                                  ) [IfCond]
                                  BlockStmt(
                                    NoOptStatementList(
                                    ) [NoOptStatementList]
                                  ) [BlockStmt]
                                  NoElseStmt(
                                  ) [NoElseStmt]
                                ) [IfStmt]
                              ) [OptStatementList]
                              IfStmt(
                                IfCond(
                                  SingleCondition(
                                    SingleCondTerm(
                                      MultipleCondFact(
                                        Expr(
                                          ExpressionTerm(
                                            PositiveExpr(
                                            ) [PositiveExpr]
                                            Term(
                                              DesignFactor(
                                                DesignVar(
                                                 arr1
                                                ) [DesignVar]
                                                NoOptMethCall(
                                                ) [NoOptMethCall]
                                              ) [DesignFactor]
                                              NoOptMulFacts(
                                              ) [NoOptMulFacts]
                                            ) [Term]
                                          ) [ExpressionTerm]
                                          NoOptAddTerms(
                                          ) [NoOptAddTerms]
                                        ) [Expr]
                                        GreaterOperation(
                                        ) [GreaterOperation]
                                        Expr(
                                          ExpressionTerm(
                                            PositiveExpr(
                                            ) [PositiveExpr]
                                            Term(
                                              DesignFactor(
                                                DesignVar(
                                                 arr2
                                                ) [DesignVar]
                                                NoOptMethCall(
                                                ) [NoOptMethCall]
                                              ) [DesignFactor]
                                              NoOptMulFacts(
                                              ) [NoOptMulFacts]
                                            ) [Term]
                                          ) [ExpressionTerm]
                                          NoOptAddTerms(
                                          ) [NoOptAddTerms]
                                        ) [Expr]
                                      ) [MultipleCondFact]
                                    ) [SingleCondTerm]
                                  ) [SingleCondition]
                                ) [IfCond]
                                BlockStmt(
                                  NoOptStatementList(
                                  ) [NoOptStatementList]
                                ) [BlockStmt]
                                NoElseStmt(
                                ) [NoElseStmt]
                              ) [IfStmt]
                            ) [OptStatementList]
                            DesignatorStmt(
                              AssignOper(
                                DesignAssignOp(
                                  DesignVar(
                                   e
                                  ) [DesignVar]
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expr(
                                    ExpressionTerm(
                                      NegativeExpr(
                                      ) [NegativeExpr]
                                      Term(
                                        FactorChar(
                                         c
                                        ) [FactorChar]
                                        NoOptMulFacts(
                                        ) [NoOptMulFacts]
                                      ) [Term]
                                    ) [ExpressionTerm]
                                    NoOptAddTerms(
                                    ) [NoOptAddTerms]
                                  ) [Expr]
                                ) [DesignAssignOp]
                              ) [AssignOper]
                            ) [DesignatorStmt]
                          ) [OptStatementList]
                          DesignatorStmt(
                            AssignOper(
                              DesignAssignOp(
                                DesignVar(
                                 e
                                ) [DesignVar]
                                AssignOperation(
                                ) [AssignOperation]
                                Expr(
                                  ExpressionTerm(
                                    PositiveExpr(
                                    ) [PositiveExpr]
                                    Term(
                                      FactorNum(
                                       5
                                      ) [FactorNum]
                                      NoOptMulFacts(
                                      ) [NoOptMulFacts]
                                    ) [Term]
                                  ) [ExpressionTerm]
                                  NoOptAddTerms(
                                  ) [NoOptAddTerms]
                                ) [Expr]
                              ) [DesignAssignOp]
                            ) [AssignOper]
                          ) [DesignatorStmt]
                        ) [OptStatementList]
                        DesignatorStmt(
                          AssignOper(
                            DesignAssignOp(
                              DesignVar(
                               e
                              ) [DesignVar]
                              AssignOperation(
                              ) [AssignOperation]
                              Expr(
                                ExpressionTerm(
                                  PositiveExpr(
                                  ) [PositiveExpr]
                                  Term(
                                    DesignFactor(
                                      DesignVar(
                                       e
                                      ) [DesignVar]
                                      NoOptMethCall(
                                      ) [NoOptMethCall]
                                    ) [DesignFactor]
                                    NoOptMulFacts(
                                    ) [NoOptMulFacts]
                                  ) [Term]
                                ) [ExpressionTerm]
                                OptionalAddTerms(
                                  NoOptAddTerms(
                                  ) [NoOptAddTerms]
                                  PlusOperation(
                                  ) [PlusOperation]
                                  Term(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                    NoOptMulFacts(
                                    ) [NoOptMulFacts]
                                  ) [Term]
                                ) [OptionalAddTerms]
                              ) [Expr]
                            ) [DesignAssignOp]
                          ) [AssignOper]
                        ) [DesignatorStmt]
                      ) [OptStatementList]
                      DesignatorStmt(
                        AssignOper(
                          DesignAssignOp(
                            DesignVar(
                             e
                            ) [DesignVar]
                            AssignOperation(
                            ) [AssignOperation]
                            Expr(
                              ExpressionTerm(
                                PositiveExpr(
                                ) [PositiveExpr]
                                Term(
                                  FactorNum(
                                   5
                                  ) [FactorNum]
                                  NoOptMulFacts(
                                  ) [NoOptMulFacts]
                                ) [Term]
                              ) [ExpressionTerm]
                              NoOptAddTerms(
                              ) [NoOptAddTerms]
                            ) [Expr]
                          ) [DesignAssignOp]
                        ) [AssignOper]
                      ) [DesignatorStmt]
                    ) [OptStatementList]
                    DesignatorStmt(
                      AssignOper(
                        DesignAssignOp(
                          DesignVar(
                           e
                          ) [DesignVar]
                          AssignOperation(
                          ) [AssignOperation]
                          Expr(
                            ExpressionTerm(
                              PositiveExpr(
                              ) [PositiveExpr]
                              Term(
                                DesignFactor(
                                  DesignVar(
                                   e
                                  ) [DesignVar]
                                  NoOptMethCall(
                                  ) [NoOptMethCall]
                                ) [DesignFactor]
                                OptionalMulFacts(
                                  NoOptMulFacts(
                                  ) [NoOptMulFacts]
                                  MulOperation(
                                  ) [MulOperation]
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                ) [OptionalMulFacts]
                              ) [Term]
                            ) [ExpressionTerm]
                            NoOptAddTerms(
                            ) [NoOptAddTerms]
                          ) [Expr]
                        ) [DesignAssignOp]
                      ) [AssignOper]
                    ) [DesignatorStmt]
                  ) [OptStatementList]
                  DesignatorStmt(
                    ProcCall(
                      DesignVar(
                       e
                      ) [DesignVar]
                      NoOptActPars(
                      ) [NoOptActPars]
                    ) [ProcCall]
                  ) [DesignatorStmt]
                ) [OptStatementList]
                DesignatorStmt(
                  AssignOper(
                    DesignAssignOp(
                      DesignVar(
                       arr1
                      ) [DesignVar]
                      AssignOperation(
                      ) [AssignOperation]
                      Expr(
                        ExpressionTerm(
                          PositiveExpr(
                          ) [PositiveExpr]
                          Term(
                            FactorNewArray(
                              Type(
                               int
                              ) [Type]
                              Expr(
                                ExpressionTerm(
                                  PositiveExpr(
                                  ) [PositiveExpr]
                                  Term(
                                    FactorChar(
                                     c
                                    ) [FactorChar]
                                    NoOptMulFacts(
                                    ) [NoOptMulFacts]
                                  ) [Term]
                                ) [ExpressionTerm]
                                NoOptAddTerms(
                                ) [NoOptAddTerms]
                              ) [Expr]
                            ) [FactorNewArray]
                            NoOptMulFacts(
                            ) [NoOptMulFacts]
                          ) [Term]
                        ) [ExpressionTerm]
                        NoOptAddTerms(
                        ) [NoOptAddTerms]
                      ) [Expr]
                    ) [DesignAssignOp]
                  ) [AssignOper]
                ) [DesignatorStmt]
              ) [OptStatementList]
              DesignatorStmt(
                AssignOper(
                  DesignAssignOp(
                    DesignVar(
                     e
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expr(
                      ExpressionTerm(
                        PositiveExpr(
                        ) [PositiveExpr]
                        Term(
                          DesignFactor(
                            DesignArray(
                              DesignVar(
                               arr1
                              ) [DesignVar]
                              Expr(
                                ExpressionTerm(
                                  PositiveExpr(
                                  ) [PositiveExpr]
                                  Term(
                                    FactorNum(
                                     1
                                    ) [FactorNum]
                                    NoOptMulFacts(
                                    ) [NoOptMulFacts]
                                  ) [Term]
                                ) [ExpressionTerm]
                                NoOptAddTerms(
                                ) [NoOptAddTerms]
                              ) [Expr]
                            ) [DesignArray]
                            NoOptMethCall(
                            ) [NoOptMethCall]
                          ) [DesignFactor]
                          NoOptMulFacts(
                          ) [NoOptMulFacts]
                        ) [Term]
                      ) [ExpressionTerm]
                      NoOptAddTerms(
                      ) [NoOptAddTerms]
                    ) [Expr]
                  ) [DesignAssignOp]
                ) [AssignOper]
              ) [DesignatorStmt]
            ) [OptStatementList]
            DesignatorStmt(
              AssignOper(
                DesignAssignOp(
                  DesignVar(
                   e
                  ) [DesignVar]
                  AssignOperation(
                  ) [AssignOperation]
                  Expr(
                    ExpressionTerm(
                      PositiveExpr(
                      ) [PositiveExpr]
                      Term(
                        DesignFactor(
                          DesignArray(
                            DesignVar(
                             arr1
                            ) [DesignVar]
                            Expr(
                              ExpressionTerm(
                                PositiveExpr(
                                ) [PositiveExpr]
                                Term(
                                  FactorChar(
                                   c
                                  ) [FactorChar]
                                  NoOptMulFacts(
                                  ) [NoOptMulFacts]
                                ) [Term]
                              ) [ExpressionTerm]
                              NoOptAddTerms(
                              ) [NoOptAddTerms]
                            ) [Expr]
                          ) [DesignArray]
                          NoOptMethCall(
                          ) [NoOptMethCall]
                        ) [DesignFactor]
                        NoOptMulFacts(
                        ) [NoOptMulFacts]
                      ) [Term]
                    ) [ExpressionTerm]
                    NoOptAddTerms(
                    ) [NoOptAddTerms]
                  ) [Expr]
                ) [DesignAssignOp]
              ) [AssignOper]
            ) [DesignatorStmt]
          ) [OptStatementList]
          DesignatorStmt(
            AssignOper(
              DesignAssignOp(
                DesignVar(
                 e
                ) [DesignVar]
                AssignOperation(
                ) [AssignOperation]
                Expr(
                  ExpressionTerm(
                    PositiveExpr(
                    ) [PositiveExpr]
                    Term(
                      DesignFactor(
                        DesignArray(
                          DesignVar(
                           e
                          ) [DesignVar]
                          Expr(
                            ExpressionTerm(
                              PositiveExpr(
                              ) [PositiveExpr]
                              Term(
                                FactorNum(
                                 1
                                ) [FactorNum]
                                NoOptMulFacts(
                                ) [NoOptMulFacts]
                              ) [Term]
                            ) [ExpressionTerm]
                            NoOptAddTerms(
                            ) [NoOptAddTerms]
                          ) [Expr]
                        ) [DesignArray]
                        NoOptMethCall(
                        ) [NoOptMethCall]
                      ) [DesignFactor]
                      NoOptMulFacts(
                      ) [NoOptMulFacts]
                    ) [Term]
                  ) [ExpressionTerm]
                  NoOptAddTerms(
                  ) [NoOptAddTerms]
                ) [Expr]
              ) [DesignAssignOp]
            ) [AssignOper]
          ) [DesignatorStmt]
        ) [OptStatementList]
        ReturnStmt(
          NoRetExpr(
          ) [NoRetExpr]
        ) [ReturnStmt]
      ) [OptStatementList]
    ) [MethodDeclaration]
  ) [MethDeclarationList]
) [Program]
INFO  19:05:04,485 - =====================SEMANTICKA OBRADA=====================
ERROR 19:05:04,490 - Greska na 2: navedeni i stvarni tip konstante a se ne poklapaju
ERROR 19:05:04,490 - Greska na 3: nije pronadjen tip type u tabeli simbola
ERROR 19:05:04,491 - Greska na 9: promenljiva e je vec deklarisana
INFO  19:05:04,492 - Pretraga na 12(m), nadjeno Var m: int, 0, 1 
INFO  19:05:04,492 - Pretraga na 13(m), nadjeno Var m: int, 0, 1 
ERROR 19:05:04,492 - Greska na 2: funkcija f i njena povratna vrednost nisu kompatibilni
ERROR 19:05:04,492 - Greska na 11: metoda f nema povratnu vrednost (return)
ERROR 19:05:04,493 - Greska na 2: funkcija func mora biti tipa void
ERROR 19:05:04,493 - Greska na 21: promenljiva k nije deklarisana
ERROR 19:05:04,493 - Greska na 21: tip promenljive noObj i izraza nisu kompatibilni
INFO  19:05:04,493 - Pretraga na 22(c), nadjeno Con c: int, 2, 0 
ERROR 19:05:04,493 - Greska na 22: c mora biti ili promenljiva ili element niza ili element matrice ili polje klase
INFO  19:05:04,493 - Pretraga na 23(d), nadjeno Var d: char, 0, 0 
ERROR 19:05:04,493 - Greska na 23: tip promenljive d i izraza nisu kompatibilni
INFO  19:05:04,493 - Pretraga na 25(c), nadjeno Con c: int, 2, 0 
ERROR 19:05:04,493 - Greska na 25: c mora biti ili promenljiva ili element niza ili element matrice ili polje klase
INFO  19:05:04,493 - Pretraga na 26(d), nadjeno Var d: char, 0, 0 
ERROR 19:05:04,493 - Greska na 26: d mora biti tipa int
INFO  19:05:04,494 - Pretraga na 27(d), nadjeno Var d: char, 0, 0 
ERROR 19:05:04,494 - Greska na 27: promenljiva d nije funkcija
ERROR 19:05:04,494 - iskaz 'break' se moze koristiti samo unutar while ili foreach petlje
ERROR 19:05:04,494 - iskaz 'continue' se moze koristiti samo unutar while ili foreach petlje
INFO  19:05:04,494 - Pretraga na 32(c), nadjeno Con c: int, 2, 0 
ERROR 19:05:04,494 - Greska na 32: c mora biti ili promenljiva ili element niza ili element matrice ili polje klase
ERROR 19:05:04,494 - Greska na 33: promenljiva b nije deklarisana
ERROR 19:05:04,494 - Greska na 33: noObj mora biti ili int ili char ili bool tipa
ERROR 19:05:04,494 - Greska na 35: promenljiva b nije deklarisana
ERROR 19:05:04,494 - Greska na 7: izraz unutar print naredbe mora biti ili int ili char ili bool tipa
INFO  19:05:04,494 - Pretraga na 37(d), nadjeno Var d: char, 0, 0 
ERROR 19:05:04,494 - Greska na 4: izraz mora biti tipa bool
ERROR 19:05:04,494 - Greska na 4: uslov u if naredbi mora biti bool tipa
INFO  19:05:04,495 - Pretraga na 39(d), nadjeno Var d: char, 0, 0 
ERROR 19:05:04,495 - Greska na 7: izraz mora biti tipa bool
ERROR 19:05:04,495 - Greska na 7: uslov u while naredbi mora biti bool tipa
INFO  19:05:04,496 - Pretraga na 41(f), nadjeno Meth f: char, 0, 0 
   Var m: int, 0, 1 
   Var n: int, 1, 1 
   Var p: int, 2, 1 

ERROR 19:05:04,496 - Greska na 3: broj formalnih i stvarnih parametara funkcije f se razlikuje
INFO  19:05:04,496 - Pretraga na 42(f), nadjeno Meth f: char, 0, 0 
   Var m: int, 0, 1 
   Var n: int, 1, 1 
   Var p: int, 2, 1 

ERROR 19:05:04,496 - Greska na 3: formalni i stvarni parametari funkcije f se razlikuju po tipu
ERROR 19:05:04,497 - Greska na 4: tipovi izraza u uslovu nisu kompatibilni
ERROR 19:05:04,497 - Greska na 4: uslov u if naredbi mora biti bool tipa
INFO  19:05:04,497 - Pretraga na 46(arr1), nadjeno Var arr1: Arr of int, 2, 0 
INFO  19:05:04,497 - Pretraga na 46(arr2), nadjeno Var arr2: Arr of int, 3, 0 
ERROR 19:05:04,498 - Greska na 4: uz klase i nizove dozvoljeni su samo '!=' i '==' operatori
ERROR 19:05:04,499 - Greska na 4: uslov u if naredbi mora biti bool tipa
INFO  19:05:04,499 - Pretraga na 48(e), nadjeno Var e: int, 1, 0 
ERROR 19:05:04,499 - Greska na 48: izraz sa predznakom minus mora biti tipa int
ERROR 19:05:04,499 - Greska na 48: tip promenljive e i izraza nisu kompatibilni
INFO  19:05:04,499 - Pretraga na 50(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,499 - Pretraga na 51(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,499 - Pretraga na 51(e), nadjeno Var e: int, 1, 0 
ERROR 19:05:04,499 - Greska na 4: tipovi promenljivih prilikom sabiranja moraju biti tipa int
ERROR 19:05:04,499 - Greska na 51: tip promenljive e i izraza nisu kompatibilni
INFO  19:05:04,499 - Pretraga na 53(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,499 - Pretraga na 54(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,500 - Pretraga na 54(e), nadjeno Var e: int, 1, 0 
ERROR 19:05:04,500 - Greska na 54: tipovi promenljivih prilikom mnozenja moraju biti tipa int
ERROR 19:05:04,500 - Greska na 54: tip promenljive e i izraza nisu kompatibilni
INFO  19:05:04,500 - Pretraga na 56(e), nadjeno Var e: int, 1, 0 
ERROR 19:05:04,500 - Greska na 56: promenljiva e nije funkcija
INFO  19:05:04,500 - Pretraga na 58(arr1), nadjeno Var arr1: Arr of int, 2, 0 
ERROR 19:05:04,500 - Greska na 58: velicina niza mora biti tipa int
ERROR 19:05:04,500 - Greska na 58: tip promenljive arr1 i izraza nisu kompatibilni
INFO  19:05:04,500 - Pretraga na 60(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,501 - Pretraga na 60(arr1), nadjeno Var arr1: Arr of int, 2, 0 
INFO  19:05:04,501 - Pretraga na 61(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,501 - Pretraga na 61(arr1), nadjeno Var arr1: Arr of int, 2, 0 
ERROR 19:05:04,501 - Greska na 61: tip izraza za pristup nizu mora biti int
ERROR 19:05:04,501 - Greska na 61: tip promenljive e i izraza nisu kompatibilni
INFO  19:05:04,501 - Pretraga na 62(e), nadjeno Var e: int, 1, 0 
INFO  19:05:04,501 - Pretraga na 62(e), nadjeno Var e: int, 1, 0 
ERROR 19:05:04,501 - Greska na 62: promenljiva e nije niz
ERROR 19:05:04,501 - Greska na 62: tip promenljive e i izraza nisu kompatibilni
ERROR 19:05:04,502 - Parsiranje NIJE uspesno zavrseno!
